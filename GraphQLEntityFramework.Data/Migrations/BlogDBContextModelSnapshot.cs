// <auto-generated />
using GraphQLEntityFramework.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQLEntityFramework.Data.Migrations
{
    [DbContext(typeof(BlogDBContext))]
    partial class BlogDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQLEntityFramework.Data.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            Content = "Today is the my day in the office",
                            Title = " A beautiful day start",
                            Type = 0
                        },
                        new
                        {
                            BlogId = 2,
                            Content = "My visit to expo center was so good",
                            Title = "Expo center visit",
                            Type = 1
                        },
                        new
                        {
                            BlogId = 3,
                            Content = "It was so good and helpful in learning many new things",
                            Title = "Developer Conference 2019",
                            Type = 1
                        });
                });

            modelBuilder.Entity("GraphQLEntityFramework.Data.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("BlogId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            BlogId = 2,
                            Remarks = "I was there too, it was a really nice event"
                        },
                        new
                        {
                            ReviewId = 2,
                            BlogId = 2,
                            Remarks = "I missed it, better luck next time"
                        },
                        new
                        {
                            ReviewId = 3,
                            BlogId = 3,
                            Remarks = "Anyone can help me with schedule on next conference"
                        });
                });

            modelBuilder.Entity("GraphQLEntityFramework.Data.Entities.Review", b =>
                {
                    b.HasOne("GraphQLEntityFramework.Data.Entities.Blog", null)
                        .WithMany("Reviews")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
